#scale_color_brewer(palette="Paired") +
#scale_color_manual(values=c("#f1a340", "#998ec3")) +
theme_linedraw(base_line_size = 2) +
removeGrid(x = TRUE, y = FALSE) +
theme(
plot.title = element_text(size=24, face="bold", hjust = 0.5),
axis.title.x = element_text(size=20, face="bold"),
axis.title.y = element_text(size=20, face="bold"),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=16, hjust = 1.0),
legend.title = element_text(size=16),
legend.text = element_text(size=16))
#legend.position = c(0.91,0.15),
#legend.direction = "vertical",
#legend.key.height = unit(1.5, 'cm'),
#legend.key.width = unit(1.5, 'cm'))
ggsave("D.svg", width=169, height = 169, units = "mm")
library(ggplot2)
library(scales)
library(svglite)
library(ggExtra)
setwd("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/")
data = read.csv("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/d3.csv")
data$taxa <- factor(data$taxa, levels = rev(unique(data$taxa)), ordered=TRUE)
ggplot(data, aes(taxa, d, color=Significance)) +
geom_point(size=3) +
geom_errorbar(aes(ymin=d-error, ymax=d+error)) +
coord_flip() +
scale_y_continuous(labels = label_number(accuracy = 0.001)) +
labs(title="D Statistic Results",
x="Taxa Triplet (P1,P2),P3",
y="D Statistic") +
scale_color_manual(values=c("light blue", "dark blue")) +
#scale_color_brewer(palette="Paired") +
#scale_color_manual(values=c("#f1a340", "#998ec3")) +
theme_linedraw(base_line_size = 2) +
removeGrid(x = TRUE, y = FALSE) +
theme(
plot.title = element_text(size=24, face="bold", hjust = 0.5),
axis.title.x = element_text(size=20, face="bold"),
axis.title.y = element_text(size=20, face="bold"),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=16, hjust = 1.0))
#legend.title = element_text(size=16),
#legend.text = element_text(size=16))
#legend.position = c(0.91,0.15),
#legend.direction = "vertical",
#legend.key.height = unit(1.5, 'cm'),
#legend.key.width = unit(1.5, 'cm'))
ggsave("D.svg", width=169, height = 169, units = "mm")
library(ggplot2)
library(scales)
library(svglite)
library(ggExtra)
setwd("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/")
data = read.csv("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/d3.csv")
data$taxa <- factor(data$taxa, levels = rev(unique(data$taxa)), ordered=TRUE)
ggplot(data, aes(taxa, d, color=Significance)) +
geom_point(size=3) +
geom_errorbar(aes(ymin=d-error, ymax=d+error)) +
coord_flip() +
scale_y_continuous(labels = label_number(accuracy = 0.001)) +
labs(title="D Statistic Results",
x="Taxa Triplet (P1,P2),P3",
y="D Statistic") +
scale_color_manual(values=c("light blue", "dark blue")) +
#scale_color_brewer(palette="Paired") +
#scale_color_manual(values=c("#f1a340", "#998ec3")) +
theme_linedraw(base_line_size = 2) +
removeGrid(x = TRUE, y = FALSE) +
theme(
plot.title = element_text(size=24, face="bold", hjust = 0.5),
axis.title.x = element_text(size=20, face="bold"),
axis.title.y = element_text(size=20, face="bold"),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=16, hjust = 1.0),
legend.title = element_text(size=16),
legend.text = element_text(size=16),
legend.position = c(0.91,0.15))
#legend.direction = "vertical",
#legend.key.height = unit(1.5, 'cm'),
#legend.key.width = unit(1.5, 'cm'))
ggsave("D.svg", width=169, height = 169, units = "mm")
library(ggplot2)
library(scales)
library(svglite)
library(ggExtra)
setwd("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/")
data = read.csv("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/d3.csv")
data$taxa <- factor(data$taxa, levels = rev(unique(data$taxa)), ordered=TRUE)
ggplot(data, aes(taxa, d, color=Significance)) +
geom_point(size=3) +
geom_errorbar(aes(ymin=d-error, ymax=d+error)) +
coord_flip() +
scale_y_continuous(labels = label_number(accuracy = 0.001)) +
labs(title="D Statistic Results",
x="Taxa Triplet (P1,P2),P3",
y="D Statistic") +
scale_color_manual(values=c("light blue", "dark blue")) +
#scale_color_brewer(palette="Paired") +
#scale_color_manual(values=c("#f1a340", "#998ec3")) +
theme_linedraw(base_line_size = 2) +
removeGrid(x = TRUE, y = FALSE) +
theme(
plot.title = element_text(size=24, face="bold", hjust = 0.5),
axis.title.x = element_text(size=14, face="bold"),
axis.title.y = element_text(size=14, face="bold"),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10, hjust = 1.0),
legend.title = element_text(size=16),
legend.text = element_text(size=16),
legend.position = c(0.91,0.15))
#legend.direction = "vertical",
#legend.key.height = unit(1.5, 'cm'),
#legend.key.width = unit(1.5, 'cm'))
ggsave("D.svg", width=169, height = 169, units = "mm")
library(ggplot2)
library(scales)
library(svglite)
library(ggExtra)
setwd("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/")
data = read.csv("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/d3.csv")
data$taxa <- factor(data$taxa, levels = rev(unique(data$taxa)), ordered=TRUE)
ggplot(data, aes(taxa, d, color=Significance)) +
geom_point(size=3) +
geom_errorbar(aes(ymin=d-error, ymax=d+error)) +
coord_flip() +
scale_y_continuous(labels = label_number(accuracy = 0.001)) +
labs(title="D Statistic Results",
x="Taxa Triplet (P1,P2),P3",
y="D Statistic") +
scale_color_manual(values=c("light blue", "dark blue")) +
#scale_color_brewer(palette="Paired") +
#scale_color_manual(values=c("#f1a340", "#998ec3")) +
theme_linedraw(base_line_size = 2) +
removeGrid(x = TRUE, y = FALSE) +
theme(
plot.title = element_text(size=18, face="bold", hjust = 0.5),
axis.title.x = element_text(size=12, face="bold"),
axis.title.y = element_text(size=12, face="bold"),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10, hjust = 1.0),
legend.title = element_text(size=16),
legend.text = element_text(size=16),
legend.position = c(0.91,0.15))
#legend.direction = "vertical",
#legend.key.height = unit(1.5, 'cm'),
#legend.key.width = unit(1.5, 'cm'))
ggsave("D.svg", width=169, height = 169, units = "mm")
library(ggplot2)
library(scales)
library(svglite)
library(ggExtra)
setwd("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/")
data = read.csv("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/d3.csv")
data$taxa <- factor(data$taxa, levels = rev(unique(data$taxa)), ordered=TRUE)
ggplot(data, aes(taxa, d, color=Significance)) +
geom_point(size=3) +
geom_errorbar(aes(ymin=d-error, ymax=d+error)) +
coord_flip() +
scale_y_continuous(labels = label_number(accuracy = 0.001)) +
labs(title="D Statistic Results",
x="Taxa Triplet (P1,P2),P3",
y="D Statistic") +
scale_color_manual(values=c("light blue", "dark blue")) +
#scale_color_brewer(palette="Paired") +
#scale_color_manual(values=c("#f1a340", "#998ec3")) +
theme_linedraw(base_line_size = 2) +
removeGrid(x = TRUE, y = FALSE) +
theme(
plot.title = element_text(size=18, face="bold", hjust = 0.5),
axis.title.x = element_text(size=12, face="bold"),
axis.title.y = element_text(size=12, face="bold"),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10, hjust = 1.0),
legend.title = element_text(size=16),
legend.text = element_text(size=16),
legend.position = c(0.91,0.15))
#legend.direction = "vertical",
#legend.key.height = unit(1.5, 'cm'),
#legend.key.width = unit(1.5, 'cm'))
ggsave("D.svg", width=169, height = 125, units = "mm")
library(ggplot2)
library(scales)
library(svglite)
library(ggExtra)
setwd("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/")
data = read.csv("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/d3.csv")
data$taxa <- factor(data$taxa, levels = rev(unique(data$taxa)), ordered=TRUE)
ggplot(data, aes(taxa, d, color=Significance)) +
geom_point(size=3) +
geom_errorbar(aes(ymin=d-error, ymax=d+error)) +
coord_flip() +
scale_y_continuous(labels = label_number(accuracy = 0.001)) +
labs(title="D Statistic Results",
x="Taxa Triplet (P1,P2),P3",
y="D Statistic") +
scale_color_manual(values=c("light blue", "dark blue")) +
#scale_color_brewer(palette="Paired") +
#scale_color_manual(values=c("#f1a340", "#998ec3")) +
theme_linedraw(base_line_size = 2) +
removeGrid(x = TRUE, y = FALSE) +
theme(
plot.title = element_text(size=18, face="bold", hjust = 0.5),
axis.title.x = element_text(size=12, face="bold"),
axis.title.y = element_text(size=12, face="bold"),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10, hjust = 1.0),
legend.position = "bottom",
legend.title = element_text(size=16),
legend.text = element_text(size=16),
#legend.position = c(0.91,0.15))
#legend.direction = "vertical",
#legend.key.height = unit(1.5, 'cm'),
#legend.key.width = unit(1.5, 'cm'))
library(ggplot2)
library(scales)
library(svglite)
library(ggExtra)
setwd("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/")
data = read.csv("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/d3.csv")
data$taxa <- factor(data$taxa, levels = rev(unique(data$taxa)), ordered=TRUE)
ggplot(data, aes(taxa, d, color=Significance)) +
geom_point(size=3) +
geom_errorbar(aes(ymin=d-error, ymax=d+error)) +
coord_flip() +
scale_y_continuous(labels = label_number(accuracy = 0.001)) +
labs(title="D Statistic Results",
x="Taxa Triplet (P1,P2),P3",
y="D Statistic") +
scale_color_manual(values=c("light blue", "dark blue")) +
#scale_color_brewer(palette="Paired") +
#scale_color_manual(values=c("#f1a340", "#998ec3")) +
theme_linedraw(base_line_size = 2) +
removeGrid(x = TRUE, y = FALSE) +
theme(
plot.title = element_text(size=18, face="bold", hjust = 0.5),
axis.title.x = element_text(size=12, face="bold"),
axis.title.y = element_text(size=12, face="bold"),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10, hjust = 1.0),
legend.position = "bottom",
legend.title = element_text(size=16),
legend.text = element_text(size=16))
#legend.position = c(0.91,0.15))
#legend.direction = "vertical",
#legend.key.height = unit(1.5, 'cm'),
#legend.key.width = unit(1.5, 'cm'))
library(ggplot2)
library(scales)
library(svglite)
library(ggExtra)
setwd("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/")
data = read.csv("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/d3.csv")
data$taxa <- factor(data$taxa, levels = rev(unique(data$taxa)), ordered=TRUE)
ggplot(data, aes(taxa, d, color=Significance)) +
geom_point(size=3) +
geom_errorbar(aes(ymin=d-error, ymax=d+error)) +
coord_flip() +
scale_y_continuous(labels = label_number(accuracy = 0.001)) +
labs(title="D Statistic Results",
x="Taxa Triplet (P1,P2),P3",
y="D Statistic") +
scale_color_manual(values=c("light blue", "dark blue")) +
#scale_color_brewer(palette="Paired") +
#scale_color_manual(values=c("#f1a340", "#998ec3")) +
theme_linedraw(base_line_size = 2) +
removeGrid(x = TRUE, y = FALSE) +
theme(
plot.title = element_text(size=18, face="bold", hjust = 0.5),
axis.title.x = element_text(size=12, face="bold"),
axis.title.y = element_text(size=12, face="bold"),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10, hjust = 1.0),
legend.position = "bottom",
legend.title = element_text(size=12),
legend.text = element_text(size=12))
#legend.position = c(0.91,0.15))
#legend.direction = "vertical",
#legend.key.height = unit(1.5, 'cm'),
#legend.key.width = unit(1.5, 'cm'))
ggsave("D.svg", width=169, height = 125, units = "mm")
library(ggplot2)
library(scales)
library(svglite)
library(ggExtra)
setwd("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/")
data = read.csv("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/d3.csv")
data$taxa <- factor(data$taxa, levels = rev(unique(data$taxa)), ordered=TRUE)
ggplot(data, aes(taxa, d, color=Significance)) +
geom_point(size=2) +
geom_errorbar(aes(ymin=d-error, ymax=d+error)) +
coord_flip() +
scale_y_continuous(labels = label_number(accuracy = 0.001)) +
labs(title="D Statistic Results",
x="Taxa Triplet (P1,P2),P3",
y="D Statistic") +
scale_color_manual(values=c("light blue", "dark blue")) +
#scale_color_brewer(palette="Paired") +
#scale_color_manual(values=c("#f1a340", "#998ec3")) +
theme_linedraw(base_line_size = 2) +
removeGrid(x = TRUE, y = FALSE) +
theme(
plot.title = element_text(size=18, face="bold", hjust = 0.5),
axis.title.x = element_text(size=12, face="bold"),
axis.title.y = element_text(size=12, face="bold"),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10, hjust = 1.0),
legend.position = "bottom",
legend.title = element_text(size=12),
legend.text = element_text(size=12))
#legend.position = c(0.91,0.15))
#legend.direction = "vertical",
#legend.key.height = unit(1.5, 'cm'),
#legend.key.width = unit(1.5, 'cm'))
ggsave("D.svg", width=169, height = 125, units = "mm")
library(ggplot2)
library(scales)
library(svglite)
library(ggExtra)
setwd("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/")
data = read.csv("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/d3.csv")
data$taxa <- factor(data$taxa, levels = rev(unique(data$taxa)), ordered=TRUE)
ggplot(data, aes(taxa, d, color=Significance)) +
geom_point(size=2) +
geom_errorbar(aes(ymin=d-error, ymax=d+error)) +
coord_flip() +
scale_y_continuous(labels = label_number(accuracy = 0.001)) +
labs(title="D Statistic Results",
x="Taxa Triplet (P1,P2),P3",
y="D Statistic") +
scale_color_manual(values=c("light blue", "dark blue")) +
#scale_color_brewer(palette="Paired") +
#scale_color_manual(values=c("#f1a340", "#998ec3")) +
theme_linedraw(base_line_size = 2) +
removeGrid(x = TRUE, y = FALSE) +
theme(
plot.title = element_text(size=18, face="bold", hjust = 0.5),
axis.title.x = element_text(size=12, face="bold"),
axis.title.y = element_text(size=12, face="bold"),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10, hjust = 1.0),
legend.position = "bottom",
legend.title = element_text(size=12),
legend.text = element_text(size=12))
#legend.position = c(0.91,0.15))
#legend.direction = "vertical",
#legend.key.height = unit(1.5, 'cm'),
#legend.key.width = unit(1.5, 'cm'))
ggsave("D.svg", width=169, height = 150, units = "mm")
library(ggplot2)
library(scales)
library(svglite)
library(ggExtra)
setwd("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/")
data = read.csv("/Users/matt/Documents/dissertation/dissertation_data/abba_baba/R_figure/d.csv")
data$taxa <- factor(data$taxa, levels = rev(unique(data$taxa)), ordered=TRUE)
ggplot(data, aes(taxa, d, color=Significance)) +
geom_point(size=2) +
geom_errorbar(aes(ymin=d-error, ymax=d+error)) +
coord_flip() +
scale_y_continuous(labels = label_number(accuracy = 0.001)) +
labs(title="D Statistic Results",
x="Taxa Triplet (P1,P2),P3",
y="D Statistic") +
scale_color_manual(values=c("light blue", "dark blue")) +
#scale_color_brewer(palette="Paired") +
#scale_color_manual(values=c("#f1a340", "#998ec3")) +
theme_linedraw(base_line_size = 2) +
removeGrid(x = TRUE, y = FALSE) +
theme(
plot.title = element_text(size=18, face="bold", hjust = 0.5),
axis.title.x = element_text(size=12, face="bold"),
axis.title.y = element_text(size=12, face="bold"),
axis.text.x = element_text(size=10),
axis.text.y = element_text(size=10, hjust = 1.0),
legend.position = "bottom",
legend.title = element_text(size=12),
legend.text = element_text(size=12))
#legend.position = c(0.91,0.15))
#legend.direction = "vertical",
#legend.key.height = unit(1.5, 'cm'),
#legend.key.width = unit(1.5, 'cm'))
library(ggtree)
library(phytools)
library(treeio)
library(svglite)
setwd("/Users/matt/Documents/dissertation/dissertation_data/concordance_factor/figure/")
# Parse IQ-TREE files
#tree_data <- read.iqtree("gcf.txt")
#tree_data
# Species tree with no branch lengths
#tree <- read.tree("no_bl.txt")
# Species tree with branch lengths
#tree <- read.tree("gcf.txt")
#rooted_tree = midpoint.root(tree)
#ape::write.tree(rooted_tree)
# Species tree rooted with midpoint.root(), then manually add the branch support values
rooted_tree <- read.tree("gcf3.txt")
# Display internal node numbers
#ggtree(rooted_tree) + geom_text(aes(label=node), hjust=-.3)
par(mar = c(5.1, 4.1, 4.1, 2.1))
figure <- ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab(size=6) + geom_cladelab(node=11, label="S Clade", align=T, offset = .018, textcolor='purple', barcolor='purple', barsize = 1, fontsize = 5) + geom_cladelab(node=16, label="M Clade", align=T, offset = 0.013, textcolor='red', barcolor='red', barsize = 1, fontsize = 5) + geom_treescale() + xlim(0,0.05) + geom_text2(aes(subset = !isTip, label=label), hjust=0, vjust=-.5, size=4)
figure
library(ggtree)
library(phytools)
library(treeio)
library(svglite)
# Parse IQ-TREE files
#tree_data <- read.iqtree("gcf.txt")
#tree_data
# Species tree with no branch lengths
#tree <- read.tree("no_bl.txt")
# Species tree with branch lengths
#tree <- read.tree("gcf.txt")
#rooted_tree = midpoint.root(tree)
#ape::write.tree(rooted_tree)
# Species tree rooted with midpoint.root(), then manually add the branch support values
rooted_tree <- read.tree("gcf.treefile")
getwd()
setwd("/Users/matt/Documents/GitHub/glasenapp_pogson_2023_mol_ecol/scripts/iqtree/gcf_figure/")
library(ggtree)
library(phytools)
library(treeio)
library(svglite)
# Parse IQ-TREE files
#tree_data <- read.iqtree("gcf.txt")
#tree_data
# Species tree with no branch lengths
#tree <- read.tree("no_bl.txt")
# Species tree with branch lengths
#tree <- read.tree("gcf.txt")
#rooted_tree = midpoint.root(tree)
#ape::write.tree(rooted_tree)
# Species tree rooted with midpoint.root(), then manually add the branch support values
rooted_tree <- read.tree("gcf.treefile")
# Display internal node numbers
#ggtree(rooted_tree) + geom_text(aes(label=node), hjust=-.3)
par(mar = c(5.1, 4.1, 4.1, 2.1))
figure <- ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab(size=6) + geom_cladelab(node=11, label="S Clade", align=T, offset = .018, textcolor='purple', barcolor='purple', barsize = 1, fontsize = 5) + geom_cladelab(node=16, label="M Clade", align=T, offset = 0.013, textcolor='red', barcolor='red', barsize = 1, fontsize = 5) + geom_treescale() + xlim(0,0.05) + geom_text2(aes(subset = !isTip, label=label), hjust=0, vjust=-.5, size=4)
figure
library(ggtree)
library(phytools)
library(treeio)
library(svglite)
# Parse IQ-TREE files
#tree_data <- read.iqtree("gcf.txt")
#tree_data
# Species tree with no branch lengths
#tree <- read.tree("no_bl.txt")
# Species tree with branch lengths
#tree <- read.tree("gcf.txt")
#rooted_tree = midpoint.root(tree)
#ape::write.tree(rooted_tree)
# Species tree rooted with midpoint.root(), then manually add the branch support values
rooted_tree <- read.tree("gcf.treefile")
# Display internal node numbers
#ggtree(rooted_tree) + geom_text(aes(label=node), hjust=-.3)
par(mar = c(5.1, 4.1, 4.1, 2.1))
figure <- ggtree(rooted_tree, ladderize=FALSE) + geom_tiplab(size=6) + geom_cladelab(node=11, label="S Clade", align=T, offset = .018, textcolor='purple', barcolor='purple', barsize = 1, fontsize = 5) + geom_cladelab(node=16, label="M Clade", align=T, offset = 0.013, textcolor='red', barcolor='red', barsize = 1, fontsize = 5) + geom_treescale() + xlim(0,0.05) + geom_text2(aes(subset = !isTip, label=label), hjust=0, vjust=-.5, size=4)
figure
library(tidyverse)
# Code taken from Lanfear Lab http://www.robertlanfear.com/blog/files/concordance_factors.html
d = read.delim("gcf.stat", header = T, comment.char='#')
setwd(cwd)
getcwd()
getwd()
setwd(getwd())
d = read.delim("gcf.stat", header = T, comment.char='#')
setwd(getwd())
d = read.delim("gcf.stat", header = T, comment.char='#')
setwd("~/Documents/GitHub/glasenapp_pogson_2023_mol_ecol/data/concordance_factor/gcf_chisq")
d = read.delim("gcf.stat", header = T, comment.char='#')
# Code taken from Lanfear Lab http://www.robertlanfear.com/blog/files/concordance_factors.html
setwd(getwd())
d = read.delim("gcf.stat", header = T, comment.char='#')
#d = read.delim("scf.stat", header = T, comment.char='#')
chisq = function(DF1, DF2, N){
tryCatch({
# converts percentages to counts, runs chisq, gets pvalue
chisq.test(c(round(DF1*N)/100, round(DF2*N)/100))$p.value
},
error = function(err) {
# errors come if you give chisq two zeros
# but here we're sure that there's no difference
return(1.0)
})
}
e = d %>%
group_by(ID) %>%
mutate(gEF_p = chisq(gDF1, gDF2, gN))
#mutate(sEF_p = chisq(sDF1, sDF2, sN))
View(e)
library(tidyverse)
# Code taken from Lanfear Lab http://www.robertlanfear.com/blog/files/concordance_factors.html
setwd(getwd())
d = read.delim("gcf.stat", header = T, comment.char='#')
#d = read.delim("scf.stat", header = T, comment.char='#')
chisq = function(DF1, DF2, N){
tryCatch({
# converts percentages to counts, runs chisq, gets pvalue
chisq.test(c(round(DF1*N)/100, round(DF2*N)/100))$p.value
},
error = function(err) {
# errors come if you give chisq two zeros
# but here we're sure that there's no difference
return(1.0)
})
}
e = d %>%
group_by(ID) %>%
mutate(gEF_p = chisq(gDF1, gDF2, gN))
